plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group = 'io.agodadev'
version = '0.1.0'
description = 'A library for measuring and improving developer experience on local workstations'

java {
    withJavadocJar()
    withSourcesJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    implementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:3.12.4'
}

//test {
//    useJUnitPlatform()
//}

publishing {
    publications {
         mavenJava(MavenPublication) {
            groupId = project.group.toString()
            artifactId = project.name
            version = project.version.toString()
            from components.java
            pom {
                name = 'TestMetrics'
                description = project.description
                url = 'https://github.com/yourusername/testmetrics'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'yourusername'
                        name = 'Your Name'
                        email = 'your.email@example.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/yourusername/testmetrics.git'
                    developerConnection = 'scm:git:ssh://github.com:yourusername/testmetrics.git'
                    url = 'https://github.com/yourusername/testmetrics/tree/main'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = System.getenv("MAVEN_USERNAME") ?: System.getenv('OSSRH_USERNAME')
                password = System.getenv("MAVEN_PASSWORD") ?: System.getenv('OSSRH_PASSWORD')
            }
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}